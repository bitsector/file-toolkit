name: Docker Push

on:
  repository_dispatch:
    types: [docker-scan-complete]

env:
  REGISTRY: docker.io
  IMAGE_NAME: antonbiz/file-toolkit

jobs:
  push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Create manifest list and push
      working-directory: /tmp
      run: |
        # Parse the metadata JSON to extract tags
        echo '${{ github.event.client_payload.image-metadata }}' > metadata.json
        
        # Create the manifest with proper tags
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' < metadata.json) \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ github.event.client_payload.image-digest }}
        
        echo "Successfully pushed image with tags:"
        jq -r '.tags[]' < metadata.json

    - name: Image pushed successfully
      run: |
        echo "ðŸŽ‰ Docker image pushed successfully!"
        echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "Digest: ${{ github.event.client_payload.image-digest }}"
        echo "Tags: ${{ github.event.client_payload.image-tags }}"
